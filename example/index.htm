<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link rel="stylesheet" href="../dist/photo-sphere-viewer.css">

  <style>
    html, body {
      width: 100%;
      height: 100%;
      overflow: hidden;
      margin: 0;
      padding: 0;
    }
    #photosphere {
      width: 100%;
      height: 100%;
    }

    .psv-button.custom-button {
      font-size: 22px;
      line-height: 20px;
    }
  </style>
</head>
<body>

<div id="photosphere"></div>

<script src="../bower_components/three.js/three.min.js"></script>
<script src="../bower_components/D.js/lib/D.min.js"></script>
<script src="../bower_components/uevent/uevent.min.js"></script>
<script src="../bower_components/doT/doT.min.js"></script>
<script src="../bower_components/three.js-examples/examples/js/renderers/CanvasRenderer.js"></script>
<script src="../bower_components/three.js-examples/examples/js/renderers/Projector.js"></script>
<script src="../bower_components/three.js-examples/examples/js/postprocessing/EffectComposer.js"></script>
<script src="../bower_components/three.js-examples/examples/js/postprocessing/RenderPass.js"></script>
<script src="../bower_components/three.js-examples/examples/js/postprocessing/ShaderPass.js"></script>
<script src="../bower_components/three.js-examples/examples/js/postprocessing/MaskPass.js"></script>
<script src="../bower_components/three.js-examples/examples/js/shaders/CopyShader.js"></script>
<script src="../bower_components/three.js-examples/examples/js/controls/DeviceOrientationControls.js"></script>
<script src="../dist/photo-sphere-viewer.js"></script>

<script type="text/template" id="pin-content">
<h1>HTML Ipsum Presents</h1>

<p><strong>Pellentesque habitant morbi tristique</strong> senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. <em>Aenean ultricies mi vitae est.</em> Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, <code>commodo vitae</code>, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. <a href="#">Donec non enim</a> in turpis pulvinar facilisis. Ut felis.</p>

<h2>Header Level 2</h2>

<ol>
   <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>
   <li>Aliquam tincidunt mauris eu risus.</li>
</ol>

<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus magna. Cras in mi at felis aliquet congue. Ut a est eget ligula molestie gravida. Curabitur massa. Donec eleifend, libero at sagittis mollis, tellus est malesuada tellus, at luctus turpis elit sit amet quam. Vivamus pretium ornare est.</p></blockquote>

<h3>Header Level 3</h3>

<ul>
   <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>
   <li>Aliquam tincidunt mauris eu risus.</li>
</ul>

<pre><code>
#header h1 a {
	display: block;
	width: 300px;
	height: 80px;
}
</code></pre>
</script>

<script>

//object for the different transitions
// object for each room
// method for loading and transitioning between panos
  function InfoMark(config)
  {
    this.id = config.id;
    this.image = 'pin.png';
    this.width = 35;
    this.height = 35;
    this.longitude = config.long;
    this.latitude = config.lat;
    this.anchor = config.anchorPos || 'center left';
    this.content = config.content || '';
    this.tooltip = config.tooltip ? {
      position: config.tooltip.pos || 'center left',
      content: config.tooltip.content || this.id
    } : {
      position: 'center left',
      content: this.id
    };
  }

  function Transition(config)
  {
    InfoMark.call( this, config );
    this.image = 'pin2.png';
    this.pano = {
      url: config.pano.url,
      caption: config.pano.caption
    },
    this.markers = config.markers;
  }

  // Transition to this image
  Transition.prototype.loadPano = function(lat, long)
  {
    PSV.setPanorama(
          this.pano.url,
          {
            latitude: lat,
            longitude: long
          },
          true).then(function() {
            PSV.clearMarkers()
            this.markers.forEach(function(m, i) { PSV.addMarker(m); });
            PSV.setCaption(this.pano.caption);
          }.bind(this));
  }

  var markers = {
        fireplace: new InfoMark({
          id: 'fireplace',
          long: 6.25,
          lat: Math.PI * 2,
          content: 'A nice house warming gift'
        })
      },
      rooms = {
        living: new Transition({
          id: 'living',
          long: 0.6,
          lat: Math.PI * 2,
          tooltip: {
            pos: 'center',
            content: 'move to Living room'
          },
          pano: {
            url: '360_Living.jpg',
            caption: 'The Living Room',
          }
        }),
        kitchen: new Transition({
          id: 'kitchen',
          long: 0.5,
          lat: Math.PI * 2,
          tooltip: {
            pos: 'center left',
            content: 'move to kitchen'
          },
          pano: {
            url: '360_Kitchen.jpg',
            caption: 'The Kitchen',
          }
        }),
      };
  rooms.living.markers = [
    rooms.kitchen,
    markers.fireplace
  ];
  rooms.kitchen.markers = [ rooms.living ];

  var PSV = new PhotoSphereViewer({
    panorama: '360_Living.jpg',
    container: 'photosphere',
    loading_img: 'photosphere-logo.gif',
    navbar: [
      'autorotate', 'zoom', 'download', 'markers',
      'spacer-1',
      {
        id: 'disabled',
        title: 'This button is disabled',
        content: '‚ùå',
        enabled: false
      },
      'caption',
      'gyroscope',
      'fullscreen'
    ],
    caption: '<i>The Living Room</i>',
    anim_speed: '-2rpm',
    default_fov: 50,
    fisheye: true,
    move_speed: 1.1,
    time_anim: false,
    gyroscope: true,
    webgl: true,
    transition: {
      duration: 1000,
      loader: true,
      blur: true
    },
    markers: (function(){
      rooms.living.markers.forEach(function(m) {console.log(m);});
      return rooms.living.markers;
    })()
  });

  PSV.on('select-marker', function(marker)
  {
    console.log('select marker', marker)
    if (rooms[marker.id].loadPano) {
      rooms[marker.id].loadPano(Math.PI * 2, Math.PI * 2);
    }
  });
</script>

<script>
  document.write('<script src="//' + location.host.split(':')[0] + ':35729/livereload.js" async defer><' + '/script>');
</script>
</body>
</html>
